{"ast":null,"code":"const api = 'https://reactnd-books-api.udacity.com'; // Generate a unique token for storing your bookshelf data on the backend server.\n\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token\n};\nexport const get = bookId => fetch(`${api}/books/${bookId}`, {\n  headers\n}).then(res => res.json()).then(data => data.book);\nexport const getAll = () => fetch(`${api}/books`, {\n  headers\n}).then(res => res.json()).then(data => data.books);\nexport const update = (book, shelf) => fetch(`${api}/books/${book.id}`, {\n  method: 'PUT',\n  headers: { ...headers,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    shelf\n  })\n}).then(res => res.json());\nexport const search = query => fetch(`${api}/search`, {\n  method: 'POST',\n  headers: { ...headers,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    query\n  })\n}).then(res => res.json()).then(data => data.books);","map":{"version":3,"sources":["/Users/razbasnet/Desktop/react/GitHub/myreads/src/BooksAPI.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","then","res","json","data","book","getAll","books","update","shelf","id","method","body","JSON","stringify","search","query"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uCAAZ,C,CAEA;;AACA,IAAIC,KAAK,GAAGC,YAAY,CAACD,KAAzB;AACA,IAAI,CAACA,KAAL,EAAYA,KAAK,GAAGC,YAAY,CAACD,KAAb,GAAqBE,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAC,CAAnC,CAA7B;AAEZ,MAAMC,OAAO,GAAG;AACfC,EAAAA,MAAM,EAAE,kBADO;AAEfC,EAAAA,aAAa,EAAER;AAFA,CAAhB;AAKA,OAAO,MAAMS,GAAG,GAAIC,MAAD,IAClBC,KAAK,CAAE,GAAEZ,GAAI,UAASW,MAAO,EAAxB,EAA2B;AAAEJ,EAAAA;AAAF,CAA3B,CAAL,CACEM,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEQG,IAAD,IAAUA,IAAI,CAACC,IAFtB,CADM;AAKP,OAAO,MAAMC,MAAM,GAAG,MACrBN,KAAK,CAAE,GAAEZ,GAAI,QAAR,EAAiB;AAAEO,EAAAA;AAAF,CAAjB,CAAL,CACEM,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEQG,IAAD,IAAUA,IAAI,CAACG,KAFtB,CADM;AAKP,OAAO,MAAMC,MAAM,GAAG,CAACH,IAAD,EAAOI,KAAP,KACrBT,KAAK,CAAE,GAAEZ,GAAI,UAASiB,IAAI,CAACK,EAAG,EAAzB,EAA4B;AAChCC,EAAAA,MAAM,EAAE,KADwB;AAEhChB,EAAAA,OAAO,EAAE,EACR,GAAGA,OADK;AAER,oBAAgB;AAFR,GAFuB;AAMhCiB,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEL,IAAAA;AAAF,GAAf;AAN0B,CAA5B,CAAL,CAOGR,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,CADM;AAUP,OAAO,MAAMY,MAAM,GAAIC,KAAD,IACrBhB,KAAK,CAAE,GAAEZ,GAAI,SAAR,EAAkB;AACtBuB,EAAAA,MAAM,EAAE,MADc;AAEtBhB,EAAAA,OAAO,EAAE,EACR,GAAGA,OADK;AAER,oBAAgB;AAFR,GAFa;AAMtBiB,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEE,IAAAA;AAAF,GAAf;AANgB,CAAlB,CAAL,CAQEf,IARF,CAQQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARhB,EASEF,IATF,CASQG,IAAD,IAAUA,IAAI,CAACG,KATtB,CADM","sourcesContent":["const api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n\tAccept: 'application/json',\n\tAuthorization: token,\n};\n\nexport const get = (bookId) =>\n\tfetch(`${api}/books/${bookId}`, { headers })\n\t\t.then((res) => res.json())\n\t\t.then((data) => data.book);\n\nexport const getAll = () =>\n\tfetch(`${api}/books`, { headers })\n\t\t.then((res) => res.json())\n\t\t.then((data) => data.books);\n\nexport const update = (book, shelf) =>\n\tfetch(`${api}/books/${book.id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ shelf }),\n\t}).then((res) => res.json());\n\nexport const search = (query) =>\n\tfetch(`${api}/search`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ query }),\n\t})\n\t\t.then((res) => res.json())\n\t\t.then((data) => data.books);\n"]},"metadata":{},"sourceType":"module"}