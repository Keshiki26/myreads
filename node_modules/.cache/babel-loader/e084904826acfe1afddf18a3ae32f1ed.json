{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/razbasnet/Desktop/react/GitHub/myreads/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport MyBooks from \"./MyBooks\";\nimport Search from \"./Search\";\nimport { Route } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      searchResults: [],\n      searching: \"not\"\n    };\n\n    this.componentDidMount = () => {\n      BooksAPI.getAll().then(books => {\n        this.setState({\n          books\n        });\n      });\n    };\n\n    this.componentDidUpdate = () => {\n      BooksAPI.getAll().then(books => {\n        this.setState({\n          books\n        });\n      });\n    };\n\n    this.bookUpdate = (book, shelf) => {\n      BooksAPI.update(book, shelf);\n    };\n\n    this.bookSearch = query => {\n      if (query !== \"\") {\n        BooksAPI.search(query).then(books => {\n          if (!books.error) {\n            this.setState({\n              searchResults: books,\n              searching: \"found\"\n            });\n            console.log(books);\n          } else {\n            this.setState({\n              searchResults: [],\n              searching: \"notfound\"\n            });\n          }\n        });\n      } else {\n        this.setState({\n          searching: \"not\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(MyBooks, {\n          updateBooks: this.bookUpdate,\n          books: this.state.books\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        render: () => /*#__PURE__*/_jsxDEV(Search, {\n          searching: this.state.searching,\n          updateBooks: this.bookUpdate,\n          bookSearch: this.bookSearch,\n          books: this.state.searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*\n\tROUTE EXPLANATION\n\tEssentially all this really means:\n\t\t<Route path=\"...\" render=(...)/>\n\tis render this component when on this link (path=\"...\")\n\tadding exact to that meaning that the link has to ONLY include that\n\tso for instance root would be '/', and another link '/search', techincally\n\t'/search' contains or matches '/' so it would render that too unless we specify 'exact'\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/razbasnet/Desktop/react/GitHub/myreads/src/components/App.js"],"names":["React","Component","MyBooks","Search","Route","BooksAPI","App","state","books","searchResults","searching","componentDidMount","getAll","then","setState","componentDidUpdate","bookUpdate","book","shelf","update","bookSearch","query","search","error","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADkB;;AAAA,SAM1BC,iBAN0B,GAMN,MAAM;AACxBN,MAAAA,QAAQ,CAACO,MAAT,GAAkBC,IAAlB,CAAwBL,KAAD,IAAW;AAChC,aAAKM,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AACD,OAFD;AAGD,KAVyB;;AAAA,SAW1BO,kBAX0B,GAWL,MAAM;AACzBV,MAAAA,QAAQ,CAACO,MAAT,GAAkBC,IAAlB,CAAwBL,KAAD,IAAW;AAChC,aAAKM,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AACD,OAFD;AAGD,KAfyB;;AAAA,SAgB1BQ,UAhB0B,GAgBb,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5Bb,MAAAA,QAAQ,CAACc,MAAT,CAAgBF,IAAhB,EAAsBC,KAAtB;AACD,KAlByB;;AAAA,SAoB1BE,UApB0B,GAoBZC,KAAD,IAAW;AACtB,UAAIA,KAAK,KAAK,EAAd,EAAkB;AAChBhB,QAAAA,QAAQ,CAACiB,MAAT,CAAgBD,KAAhB,EAAuBR,IAAvB,CAA6BL,KAAD,IAAW;AACrC,cAAI,CAACA,KAAK,CAACe,KAAX,EAAkB;AAChB,iBAAKT,QAAL,CAAc;AAAEL,cAAAA,aAAa,EAAED,KAAjB;AAAwBE,cAAAA,SAAS,EAAE;AAAnC,aAAd;AACAc,YAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,WAHD,MAGO;AACL,iBAAKM,QAAL,CAAc;AAAEL,cAAAA,aAAa,EAAE,EAAjB;AAAqBC,cAAAA,SAAS,EAAE;AAAhC,aAAd;AACD;AACF,SAPD;AAQD,OATD,MASO;AACL,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KAjCyB;AAAA;;AAmC1BgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,MAAM,EAAE,mBACN,QAAC,OAAD;AAAS,UAAA,WAAW,EAAE,KAAKV,UAA3B;AAAuC,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC;AAAzD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,MAAM,EAAE,mBACN,QAAC,MAAD;AACE,UAAA,SAAS,EAAE,KAAKD,KAAL,CAAWG,SADxB;AAEE,UAAA,WAAW,EAAE,KAAKM,UAFpB;AAGE,UAAA,UAAU,EAAE,KAAKI,UAHnB;AAIE,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE;AAJpB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA1DyB;AA4D5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport MyBooks from \"./MyBooks\";\nimport Search from \"./Search\";\nimport { Route } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass App extends Component {\n  state = {\n    books: [],\n    searchResults: [],\n    searching: \"not\",\n  };\n  componentDidMount = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books });\n    });\n  };\n  componentDidUpdate = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books });\n    });\n  };\n  bookUpdate = (book, shelf) => {\n    BooksAPI.update(book, shelf);\n  };\n\n  bookSearch = (query) => {\n    if (query !== \"\") {\n      BooksAPI.search(query).then((books) => {\n        if (!books.error) {\n          this.setState({ searchResults: books, searching: \"found\" });\n          console.log(books);\n        } else {\n          this.setState({ searchResults: [], searching: \"notfound\" });\n        }\n      });\n    } else {\n      this.setState({ searching: \"not\" });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <MyBooks updateBooks={this.bookUpdate} books={this.state.books} />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={() => (\n            <Search\n              searching={this.state.searching}\n              updateBooks={this.bookUpdate}\n              bookSearch={this.bookSearch}\n              books={this.state.searchResults}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n/*\n\tROUTE EXPLANATION\n\tEssentially all this really means:\n\t\t<Route path=\"...\" render=(...)/>\n\tis render this component when on this link (path=\"...\")\n\tadding exact to that meaning that the link has to ONLY include that\n\tso for instance root would be '/', and another link '/search', techincally\n\t'/search' contains or matches '/' so it would render that too unless we specify 'exact'\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}