{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/razbasnet/Desktop/react/GitHub/myreads/src/components/CurrentPage.js\";\nimport React, { Component } from \"react\";\nimport \"./CurrentPage.css\";\nimport { Dropdown, Icon } from \"semantic-ui-react\";\nconst options = [{\n  key: \"move\",\n  text: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Move\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), \" to...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this),\n  disabled: true\n}, {\n  value: \"currentlyReading\",\n  text: \"Currently Reading\"\n}, {\n  value: \"wantToRead\",\n  text: \"Want to Read\"\n}, {\n  value: \"read\",\n  text: \"Read\"\n}, {\n  value: \"none\",\n  text: \"None\"\n}];\n\nclass CurrentPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = (e, {\n      book,\n      value\n    }) => {\n      if (value !== book) {\n        this.props.updateBooks(book, value);\n      }\n    };\n\n    this.titleShow = () => {\n      if (this.props.books.length > 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"ui block header\",\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shelfs ui\",\n      children: [this.titleShow(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shelf ui\",\n        children: this.props.books.map((book, index) => {\n          var _book$imageLinks;\n\n          const bookAuthor = (book === null || book === void 0 ? void 0 : book.authors) || [];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shelf-book ui\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-settings\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"\",\n                src: (_book$imageLinks = book.imageLinks) === null || _book$imageLinks === void 0 ? void 0 : _book$imageLinks.thumbnail,\n                alt: book === null || book === void 0 ? void 0 : book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                className: \"circle-book-menu big\",\n                options: options,\n                trigger: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 30\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  icon: \"caret down\",\n                  trigger: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 32\n                  }, this),\n                  book: book,\n                  onChange: this.handleChange,\n                  defaultValue: options[this.props.dv].value,\n                  className: \"DropDownSemantic\",\n                  options: options\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"header\",\n                children: book === null || book === void 0 ? void 0 : book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meta authors\",\n                children: bookAuthor.map((author, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: author\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 30\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n} // \t\t\t\t\t\t\t\t<Dropdown className=\"book-options\" trigger={trigger} options={options} />\n\n\nexport default CurrentPage;","map":{"version":3,"sources":["/Users/razbasnet/Desktop/react/GitHub/myreads/src/components/CurrentPage.js"],"names":["React","Component","Dropdown","Icon","options","key","text","disabled","value","CurrentPage","handleChange","e","book","props","updateBooks","titleShow","books","length","title","render","map","index","bookAuthor","authors","imageLinks","thumbnail","dv","author"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CurrentPage.css\";\nimport { Dropdown, Icon } from \"semantic-ui-react\";\n\nconst options = [\n  {\n    key: \"move\",\n    text: (\n      <span>\n        <strong>Move</strong> to...\n      </span>\n    ),\n    disabled: true,\n  },\n  { value: \"currentlyReading\", text: \"Currently Reading\" },\n  { value: \"wantToRead\", text: \"Want to Read\" },\n  { value: \"read\", text: \"Read\" },\n  { value: \"none\", text: \"None\" },\n];\n\nclass CurrentPage extends Component {\n  handleChange = (e, { book, value }) => {\n    if (value !== book) {\n      this.props.updateBooks(book, value);\n    }\n  };\n  titleShow = () => {\n    if (this.props.books.length > 0) {\n      return <h3 className=\"ui block header\">{this.props.title}</h3>;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"shelfs ui\">\n        {this.titleShow()}\n        <div className=\"shelf ui\">\n          {this.props.books.map((book, index) => {\n            const bookAuthor = book?.authors || [];\n            return (\n              <div className=\"shelf-book ui\" key={index}>\n                <div className=\"book-settings\">\n                  <img\n                    className=\"\"\n                    src={book.imageLinks?.thumbnail}\n                    alt={book?.title}\n                  />\n                  <Icon\n                    className=\"circle-book-menu big\"\n                    options={options}\n                    trigger={<div />}\n                  >\n                    <Dropdown\n                      icon=\"caret down\"\n                      trigger={<div />}\n                      book={book}\n                      onChange={this.handleChange}\n                      defaultValue={options[this.props.dv].value}\n                      className=\"DropDownSemantic\"\n                      options={options}\n                    />\n                  </Icon>\n                </div>\n                <div className=\"content\">\n                  <a className=\"header\">{book?.title}</a>\n                  <div className=\"meta authors\">\n                    {bookAuthor.map((author, index) => {\n                      return <span key={index}>{author}</span>;\n                    })}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n// \t\t\t\t\t\t\t\t<Dropdown className=\"book-options\" trigger={trigger} options={options} />\n\nexport default CurrentPage;\n"]},"metadata":{},"sourceType":"module"}