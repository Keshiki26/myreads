{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/razbasnet/Desktop/react/GitHub/myreads/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport MyBooks from \"./MyBooks\";\nimport Search from \"./Search\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      searchResults: [],\n      searching: \"not\"\n    };\n\n    this.componentDidMount = () => {\n      BooksAPI.getAll().then(books => {\n        this.setState({\n          books\n        });\n      });\n    };\n\n    this.componentDidUpdate = () => {\n      BooksAPI.getAll().then(books => {\n        this.setState({\n          books\n        });\n      });\n    };\n\n    this.bookUpdate = (book, shelf) => {\n      BooksAPI.update(book, shelf);\n    };\n\n    this.bookSearch = query => {\n      BooksAPI.search(query).then(books => {\n        if (!books.error) {\n          this.setState({\n            searchResults: books,\n            searching: \"found\"\n          });\n          console.log(books);\n        } else {\n          this.setState({\n            searchResults: [],\n            searching: \"notfound\"\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(HashRouter, {\n      basename: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(MyBooks, {\n            updateBooks: this.bookUpdate,\n            books: this.state.books\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search\",\n          render: () => /*#__PURE__*/_jsxDEV(Search, {\n            searching: this.state.searching,\n            updateBooks: this.bookUpdate,\n            bookSearch: this.bookSearch,\n            books: this.state.searchResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*\n\tROUTE EXPLANATION\n\tEssentially all this really means:\n\t\t<Route path=\"...\" render=(...)/>\n\tis render this component when on this link (path=\"...\")\n\tadding exact to that meaning that the link has to ONLY include that\n\tso for instance root would be '/', and another link '/search', techincally\n\t'/search' contains or matches '/' so it would render that too unless we specify 'exact'\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/razbasnet/Desktop/react/GitHub/myreads/src/components/App.js"],"names":["React","Component","MyBooks","Search","HashRouter","Route","BooksAPI","App","state","books","searchResults","searching","componentDidMount","getAll","then","setState","componentDidUpdate","bookUpdate","book","shelf","update","bookSearch","query","search","error","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADkB;;AAAA,SAM1BC,iBAN0B,GAMN,MAAM;AACxBN,MAAAA,QAAQ,CAACO,MAAT,GAAkBC,IAAlB,CAAwBL,KAAD,IAAW;AAChC,aAAKM,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AACD,OAFD;AAGD,KAVyB;;AAAA,SAW1BO,kBAX0B,GAWL,MAAM;AACzBV,MAAAA,QAAQ,CAACO,MAAT,GAAkBC,IAAlB,CAAwBL,KAAD,IAAW;AAChC,aAAKM,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AACD,OAFD;AAGD,KAfyB;;AAAA,SAgB1BQ,UAhB0B,GAgBb,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5Bb,MAAAA,QAAQ,CAACc,MAAT,CAAgBF,IAAhB,EAAsBC,KAAtB;AACD,KAlByB;;AAAA,SAoB1BE,UApB0B,GAoBZC,KAAD,IAAW;AACtBhB,MAAAA,QAAQ,CAACiB,MAAT,CAAgBD,KAAhB,EAAuBR,IAAvB,CAA6BL,KAAD,IAAW;AACrC,YAAI,CAACA,KAAK,CAACe,KAAX,EAAkB;AAChB,eAAKT,QAAL,CAAc;AAAEL,YAAAA,aAAa,EAAED,KAAjB;AAAwBE,YAAAA,SAAS,EAAE;AAAnC,WAAd;AACAc,UAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,SAHD,MAGO;AACL,eAAKM,QAAL,CAAc;AAAEL,YAAAA,aAAa,EAAE,EAAjB;AAAqBC,YAAAA,SAAS,EAAE;AAAhC,WAAd;AACD;AACF,OAPD;AAQD,KA7ByB;AAAA;;AA+B1BgB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAC,GAArB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,MAAM,EAAE,mBACN,QAAC,OAAD;AAAS,YAAA,WAAW,EAAE,KAAKV,UAA3B;AAAuC,YAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC;AAAzD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,MAAM,EAAE,mBACN,QAAC,MAAD;AACE,YAAA,SAAS,EAAE,KAAKD,KAAL,CAAWG,SADxB;AAEE,YAAA,WAAW,EAAE,KAAKM,UAFpB;AAGE,YAAA,UAAU,EAAE,KAAKI,UAHnB;AAIE,YAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE;AAJpB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAxDyB;AA0D5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport MyBooks from \"./MyBooks\";\nimport Search from \"./Search\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass App extends Component {\n  state = {\n    books: [],\n    searchResults: [],\n    searching: \"not\",\n  };\n  componentDidMount = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books });\n    });\n  };\n  componentDidUpdate = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books });\n    });\n  };\n  bookUpdate = (book, shelf) => {\n    BooksAPI.update(book, shelf);\n  };\n\n  bookSearch = (query) => {\n    BooksAPI.search(query).then((books) => {\n      if (!books.error) {\n        this.setState({ searchResults: books, searching: \"found\" });\n        console.log(books);\n      } else {\n        this.setState({ searchResults: [], searching: \"notfound\" });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div className=\"ui container\">\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <MyBooks updateBooks={this.bookUpdate} books={this.state.books} />\n            )}\n          />\n          <Route\n            path=\"/search\"\n            render={() => (\n              <Search\n                searching={this.state.searching}\n                updateBooks={this.bookUpdate}\n                bookSearch={this.bookSearch}\n                books={this.state.searchResults}\n              />\n            )}\n          />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n/*\n\tROUTE EXPLANATION\n\tEssentially all this really means:\n\t\t<Route path=\"...\" render=(...)/>\n\tis render this component when on this link (path=\"...\")\n\tadding exact to that meaning that the link has to ONLY include that\n\tso for instance root would be '/', and another link '/search', techincally\n\t'/search' contains or matches '/' so it would render that too unless we specify 'exact'\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}