{"version":3,"sources":["components/CurrentPage.js","components/MyBooks.js","BooksAPI.js","components/SearchBar.js","components/Search.js","components/App.js","index.js"],"names":["options","key","text","disabled","value","CurrentPage","handleChange","e","book","props","updateBooks","titleShow","books","length","className","title","this","map","index","src","imageLinks","thumbnail","alt","Icon","name","trigger","Dropdown","icon","onChange","defaultValue","dv","Component","myBooks","state","currentlyReading","wantToRead","read","prevProps","setState","filter","shelf","console","log","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","id","method","body","JSON","stringify","search","query","SearchBar","searchChange","target","handleSubmit","preventDefault","term","bookSearch","onSubmit","for","type","placeholder","Search","searchTerm","controlSearchChange","submitBookSearch","Button","animated","inverted","color","Content","hidden","visible","searching","class","App","searchResults","componentDidMount","BooksAPI","componentDidUpdate","bookUpdate","error","exact","path","render","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.a3f97060.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './CurrentPage.css';\nimport { Dropdown, Icon } from 'semantic-ui-react';\n\nconst options = [\n\t{\n\t\tkey: 'move',\n\t\ttext: (\n\t\t\t<span>\n\t\t\t\t<strong>Move</strong> to...\n\t\t\t</span>\n\t\t),\n\t\tdisabled: true\n\t},\n\t{ value: 'currentlyReading', text: 'Currently Reading' },\n\t{ value: 'wantToRead', text: 'Want to Read' },\n\t{ value: 'read', text: 'Read' },\n\t{ value: 'none', text: 'None' }\n];\n\nclass CurrentPage extends Component {\n\thandleChange = (e, { book, value }) => {\n\t\tif (value !== book) {\n\t\t\tthis.props.updateBooks(book, value);\n\t\t}\n\t};\n\ttitleShow = () => {\n\t\tif (this.props.books.length > 0) {\n\t\t\treturn <h3 className=\"ui block header\">{this.props.title}</h3>;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"shelfs ui\">\n\t\t\t\t{this.titleShow()}\n\t\t\t\t<div className=\"shelf ui\">\n\t\t\t\t\t{this.props.books.map((book, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"shelf-book ui\">\n\t\t\t\t\t\t\t\t<div className=\"book-settings\">\n\t\t\t\t\t\t\t\t\t<img className=\"\" src={book.imageLinks.thumbnail} alt={book.title} />\n\t\t\t\t\t\t\t\t\t<Icon name=\"big\" className=\"circle-book-menu\" options={options} trigger={<div />}>\n\t\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\t\ticon=\"caret down\"\n\t\t\t\t\t\t\t\t\t\t\ttrigger={<a />}\n\t\t\t\t\t\t\t\t\t\t\tbook={book}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={options[this.props.dv].value}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"DropDownSemantic\"\n\t\t\t\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p key={index}>{book.title}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n// \t\t\t\t\t\t\t\t<Dropdown className=\"book-options\" trigger={trigger} options={options} />\n\nexport default CurrentPage;\n","import React, { Component } from 'react';\nimport CurrentPage from './CurrentPage';\nimport { Link } from 'react-router-dom';\n\nexport default class myBooks extends Component {\n\tstate = {\n\t\tcurrentlyReading: [],\n\t\twantToRead: [],\n\t\tread: []\n\t};\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.books !== prevProps.books) {\n\t\t\tthis.setState({ currentlyReading: this.props.books.filter((book) => book.shelf === 'currentlyReading') });\n\t\t\tthis.setState({ wantToRead: this.props.books.filter((book) => book.shelf === 'wantToRead') });\n\t\t\tthis.setState({ read: this.props.books.filter((book) => book.shelf === 'read') });\n\t\t}\n\n\t\tconsole.log(`currently reading: ${this.state.currentlyReading.length}`);\n\t\tconsole.log(`want to read: ${this.state.wantToRead.length}`);\n\t\tconsole.log(`read: ${this.state.read.length}`);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui inverted segment\">\n\t\t\t\t<div className=\"ui inverted secondary menu\">\n\t\t\t\t\t<Link to=\"/\" className=\"active red item\">\n\t\t\t\t\t\t<i className=\"large book icon\" />\n\t\t\t\t\t\tMyBooks\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className=\"right menu\">\n\t\t\t\t\t\t<Link to=\"/search\" className=\"item\">\n\t\t\t\t\t\t\t<i className=\"large search icon\" />\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<CurrentPage\n\t\t\t\t\tdv={1}\n\t\t\t\t\tupdateBooks={this.props.updateBooks}\n\t\t\t\t\tbooks={this.state.currentlyReading}\n\t\t\t\t\ttitle=\"Currently Reading\"\n\t\t\t\t/>\n\t\t\t\t<CurrentPage\n\t\t\t\t\tdv={2}\n\t\t\t\t\tupdateBooks={this.props.updateBooks}\n\t\t\t\t\tbooks={this.state.wantToRead}\n\t\t\t\t\ttitle=\"Want To Read\"\n\t\t\t\t/>\n\t\t\t\t<CurrentPage dv={3} updateBooks={this.props.updateBooks} books={this.state.read} title=\"Read\" />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","const api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(37).substr(-8);\n\nconst headers = {\n\tAccept: 'application/json',\n\tAuthorization: token\n};\n\nexport const get = (bookId) =>\n\tfetch(`${api}/books/${bookId}`, { headers }).then((res) => res.json()).then((data) => data.book);\n\nexport const getAll = () => fetch(`${api}/books`, { headers }).then((res) => res.json()).then((data) => data.books);\n\nexport const update = (book, shelf) =>\n\tfetch(`${api}/books/${book.id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ shelf })\n\t}).then((res) => res.json());\n\nexport const search = (query) =>\n\tfetch(`${api}/search`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ query })\n\t})\n\t\t.then((res) => res.json())\n\t\t.then((data) => data.books);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\n\nexport default class SearchBar extends Component {\n\thandleChange = (e) => {\n\t\tthis.props.searchChange(e.target.value);\n\t};\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(this.props.term);\n\t\tthis.props.bookSearch();\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui segment inverted \">\n\t\t\t\t<form className=\"ui form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<label for=\"searchTerm\">\n\t\t\t\t\t\t<b>Book Search</b>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"ui fluid icon input\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t//beacuse we want react to drive forward data and store data not HTML\n\t\t\t\t\t\t\tvalue={this.props.term}\n\t\t\t\t\t\t\tid=\"searchTerm\"\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t// does make things easier as only need to change this to control the input\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<i className=\"search icon\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport CurrentPage from './CurrentPage';\nimport { Button, Icon } from 'semantic-ui-react';\n\nexport default class Search extends Component {\n\tstate = { searchTerm: '', books: [] };\n\tcontrolSearchChange = (searchTerm) => {\n\t\tthis.setState({ searchTerm });\n\t};\n\tsubmitBookSearch = () => {\n\t\tthis.props.bookSearch(this.state.searchTerm);\n\t};\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.books !== prevProps.books) {\n\t\t\tthis.setState({ books: this.props.books });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui segment\">\n\t\t\t\t<div className=\"ui\">\n\t\t\t\t\t<Link to=\"/\" className=\"active red white  item\">\n\t\t\t\t\t\t<Button animated inverted color=\"red\">\n\t\t\t\t\t\t\t<Button.Content hidden>\n\t\t\t\t\t\t\t\t<Icon name=\"arrow left\" />My Books\n\t\t\t\t\t\t\t</Button.Content>\n\t\t\t\t\t\t\t<Button.Content visible>\n\t\t\t\t\t\t\t\t<Icon name=\"arrow left\" />My Books\n\t\t\t\t\t\t\t</Button.Content>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ui inverted segment\">\n\t\t\t\t\t<SearchBar\n\t\t\t\t\t\tbookSearch={this.submitBookSearch}\n\t\t\t\t\t\tterm={this.state.searchTerm}\n\t\t\t\t\t\tsearchChange={this.controlSearchChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.props.searching == 'notfound' && (\n\t\t\t\t\t\t<div class=\"ui error message\">\n\t\t\t\t\t\t\t<div class=\"header\">No Books Found!</div>\n\t\t\t\t\t\t\t<p>Please try a different search term.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<CurrentPage dv={4} updateBooks={this.props.updateBooks} books={this.state.books} title=\"Results\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport MyBooks from './MyBooks';\nimport Search from './Search';\nimport { Route } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\n\nclass App extends Component {\n\tstate = {\n\t\tbooks: [],\n\t\tsearchResults: [],\n\t\tsearching: 'not'\n\t};\n\tcomponentDidMount = () => {\n\t\tBooksAPI.getAll().then((books) => {\n\t\t\tthis.setState({ books });\n\t\t});\n\t};\n\tcomponentDidUpdate = () => {\n\t\tBooksAPI.getAll().then((books) => {\n\t\t\tthis.setState({ books });\n\t\t});\n\t};\n\tbookUpdate = (book, shelf) => {\n\t\tBooksAPI.update(book, shelf);\n\t};\n\n\tbookSearch = (query) => {\n\t\tBooksAPI.search(query).then((books) => {\n\t\t\tif (!books.error) {\n\t\t\t\tthis.setState({ searchResults: books, searching: 'found' });\n\t\t\t} else {\n\t\t\t\tthis.setState({ searchResults: [], searching: 'notfound' });\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui container\">\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/\"\n\t\t\t\t\trender={() => <MyBooks updateBooks={this.bookUpdate} books={this.state.books} />}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/search\"\n\t\t\t\t\trender={() => (\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tsearching={this.state.searching}\n\t\t\t\t\t\t\tupdateBooks={this.bookUpdate}\n\t\t\t\t\t\t\tbookSearch={this.bookSearch}\n\t\t\t\t\t\t\tbooks={this.state.searchResults}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n/*\n\tROUTE EXPLANATION\n\tEssentially all this really means:\n\t\t<Route path=\"...\" render=(...)/>\n\tis render this component when on this link (path=\"...\")\n\tadding exact to that meaning that the link has to ONLY include that\n\tso for instance root would be '/', and another link '/search', techincally\n\t'/search' contains or matches '/' so it would render that too unless we specify 'exact'\n*/\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\n// creating a history object that listens and keeps track of URL changes\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.querySelector('#root')\n);\n"],"sourceRoot":""}