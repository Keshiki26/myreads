{"version":3,"sources":["components/CurrentPage.js","components/MyBooks.js","components/SearchBar.js","components/Search.js","BooksAPI.js","components/App.js","index.js"],"names":["options","key","text","disabled","value","CurrentPage","handleChange","e","book","props","updateBooks","titleShow","books","length","className","title","this","map","index","bookAuthor","authors","src","imageLinks","thumbnail","alt","Icon","trigger","Dropdown","icon","onChange","defaultValue","dv","author","Component","myBooks","state","currentlyReading","wantToRead","read","prevProps","setState","filter","shelf","to","SearchBar","searchChange","target","handleSubmit","preventDefault","bookSearch","onSubmit","htmlFor","type","placeholder","term","id","Search","searchTerm","controlSearchChange","submitBookSearch","Button","animated","inverted","color","Content","hidden","name","visible","searching","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","body","JSON","stringify","search","query","App","searchResults","componentDidMount","BooksAPI","componentDidUpdate","bookUpdate","error","console","log","path","exact","render","ReactDOM","basename","document","querySelector"],"mappings":"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","file":"static/js/main.2d16d7de.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CurrentPage.css\";\nimport { Dropdown, Icon } from \"semantic-ui-react\";\n\nconst options = [\n  {\n    key: \"move\",\n    text: (\n      <span>\n        <strong>Move</strong> to...\n      </span>\n    ),\n    disabled: true,\n  },\n  { value: \"currentlyReading\", text: \"Currently Reading\" },\n  { value: \"wantToRead\", text: \"Want to Read\" },\n  { value: \"read\", text: \"Read\" },\n  { value: \"none\", text: \"None\" },\n];\n\nclass CurrentPage extends Component {\n  handleChange = (e, { book, value }) => {\n    if (value !== book) {\n      this.props.updateBooks(book, value);\n    }\n  };\n  titleShow = () => {\n    if (this.props.books.length > 0) {\n      return <h3 className=\"ui block header\">{this.props.title}</h3>;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"shelfs ui\">\n        {this.titleShow()}\n        <div className=\"shelf ui\">\n          {this.props.books.map((book, index) => {\n            const bookAuthor = book?.authors || [];\n            return (\n              <div className=\"shelf-book ui\" key={index}>\n                <div className=\"book-settings\">\n                  <img\n                    className=\"\"\n                    src={book.imageLinks?.thumbnail}\n                    alt={book?.title}\n                  />\n                  <Icon\n                    className=\"circle-book-menu big\"\n                    options={options}\n                    trigger={<div />}\n                  >\n                    <Dropdown\n                      icon=\"caret down\"\n                      trigger={<div />}\n                      book={book}\n                      onChange={this.handleChange}\n                      defaultValue={options[this.props.dv].value}\n                      className=\"DropDownSemantic\"\n                      options={options}\n                    />\n                  </Icon>\n                </div>\n                <div className=\"content titleauthor\">\n                  <p className=\"header\">{book?.title}</p>\n                  <div className=\"meta authors\">\n                    {bookAuthor.map((author, index) => {\n                      return <span key={index}>{author}</span>;\n                    })}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n// \t\t\t\t\t\t\t\t<Dropdown className=\"book-options\" trigger={trigger} options={options} />\n\nexport default CurrentPage;\n","import React, { Component } from \"react\";\nimport CurrentPage from \"./CurrentPage\";\nimport { Link } from \"react-router-dom\";\n\nexport default class myBooks extends Component {\n  state = {\n    currentlyReading: [],\n    wantToRead: [],\n    read: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.books !== prevProps.books) {\n      this.setState({\n        currentlyReading: this.props.books.filter(\n          (book) => book.shelf === \"currentlyReading\"\n        ),\n      });\n      this.setState({\n        wantToRead: this.props.books.filter(\n          (book) => book.shelf === \"wantToRead\"\n        ),\n      });\n      this.setState({\n        read: this.props.books.filter((book) => book.shelf === \"read\"),\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"ui inverted segment\">\n        <div className=\"ui inverted secondary menu\">\n          <Link to=\"/\" className=\"active red item\">\n            <i className=\"large book icon\" />\n            MyBooks\n          </Link>\n          <div className=\"right menu\">\n            <Link to=\"/search\" className=\"item\">\n              <i className=\"large search icon\" />\n              Search\n            </Link>\n          </div>\n        </div>\n        <CurrentPage\n          dv={1}\n          updateBooks={this.props.updateBooks}\n          books={this.state.currentlyReading}\n          title=\"Currently Reading\"\n        />\n        <CurrentPage\n          dv={2}\n          updateBooks={this.props.updateBooks}\n          books={this.state.wantToRead}\n          title=\"Want To Read\"\n        />\n        <CurrentPage\n          dv={3}\n          updateBooks={this.props.updateBooks}\n          books={this.state.read}\n          title=\"Read\"\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class SearchBar extends Component {\n\thandleChange = (e) => {\n\t\tthis.props.searchChange(e.target.value);\n\t};\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.bookSearch();\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui segment inverted \">\n\t\t\t\t<form className=\"ui form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<label htmlFor=\"searchTerm\">\n\t\t\t\t\t\t<b>Book Search</b>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"ui fluid icon input\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t//beacuse we want react to drive forward data and store data not HTML\n\t\t\t\t\t\t\tvalue={this.props.term}\n\t\t\t\t\t\t\tid=\"searchTerm\"\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t// does make things easier as only need to change this to control the input\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<i className=\"search icon\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\nimport CurrentPage from \"./CurrentPage\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nexport default class Search extends Component {\n  state = { searchTerm: \"\", books: [] };\n  controlSearchChange = (searchTerm) => {\n    this.setState({ searchTerm });\n    if (this.state.searchTerm === \"\") {\n      this.props.bookSearch(\"\");\n    }\n  };\n  submitBookSearch = () => {\n    this.props.bookSearch(this.state.searchTerm);\n  };\n  componentDidUpdate(prevProps) {\n    if (this.props.books !== prevProps.books) {\n      this.setState({ books: this.props.books });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <div className=\"ui\">\n          <Link to=\"/\" className=\"active red white  item\">\n            <Button animated inverted color=\"red\">\n              <Button.Content hidden>\n                <Icon name=\"arrow left\" />\n                My Books\n              </Button.Content>\n              <Button.Content visible>\n                <Icon name=\"arrow left\" />\n                My Books\n              </Button.Content>\n            </Button>\n          </Link>\n        </div>\n        <div className=\"ui inverted segment\">\n          <SearchBar\n            bookSearch={this.submitBookSearch}\n            term={this.state.searchTerm}\n            searchChange={this.controlSearchChange}\n          />\n          {this.props.searching === \"notfound\" && (\n            <div className=\"ui error message\">\n              <div className=\"header\">No Books Found!</div>\n              <p>Please try a different search term.</p>\n            </div>\n          )}\n          <CurrentPage\n            dv={4}\n            updateBooks={this.props.updateBooks}\n            books={this.state.books}\n            title=\"Results\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","const api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(37).substr(-8);\n\nconst headers = {\n\tAccept: 'application/json',\n\tAuthorization: token\n};\n\nexport const get = (bookId) =>\n\tfetch(`${api}/books/${bookId}`, { headers }).then((res) => res.json()).then((data) => data.book);\n\nexport const getAll = () => fetch(`${api}/books`, { headers }).then((res) => res.json()).then((data) => data.books);\n\nexport const update = (book, shelf) =>\n\tfetch(`${api}/books/${book.id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ shelf })\n\t}).then((res) => res.json());\n\nexport const search = (query) =>\n\tfetch(`${api}/search`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ query })\n\t})\n\t\t.then((res) => res.json())\n\t\t.then((data) => data.books);\n","import React, { Component } from \"react\";\nimport MyBooks from \"./MyBooks\";\nimport Search from \"./Search\";\nimport { Route } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass App extends Component {\n  state = {\n    books: [],\n    searchResults: [],\n    searching: \"not\",\n  };\n  componentDidMount = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books });\n    });\n  };\n  componentDidUpdate = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books });\n    });\n  };\n  bookUpdate = (book, shelf) => {\n    BooksAPI.update(book, shelf);\n  };\n\n  bookSearch = (query) => {\n    if (query !== \"\") {\n      BooksAPI.search(query).then((books) => {\n        if (!books.error) {\n          this.setState({ searchResults: books, searching: \"found\" });\n          console.log(books);\n        } else {\n          this.setState({ searchResults: [], searching: \"notfound\" });\n        }\n      });\n    } else {\n      this.setState({ searching: \"not\" });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <MyBooks updateBooks={this.bookUpdate} books={this.state.books} />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={() => (\n            <Search\n              searching={this.state.searching}\n              updateBooks={this.bookUpdate}\n              bookSearch={this.bookSearch}\n              books={this.state.searchResults}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n/*\n\tROUTE EXPLANATION\n\tEssentially all this really means:\n\t\t<Route path=\"...\" render=(...)/>\n\tis render this component when on this link (path=\"...\")\n\tadding exact to that meaning that the link has to ONLY include that\n\tso for instance root would be '/', and another link '/search', techincally\n\t'/search' contains or matches '/' so it would render that too unless we specify 'exact'\n*/\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\n// creating a history object that listens and keeps track of URL changes\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <App />\n  </HashRouter>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}