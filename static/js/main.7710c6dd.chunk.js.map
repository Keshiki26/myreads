{"version":3,"sources":["components/CurrentPage.js","components/MyBooks.js","components/SearchBar.js","components/Search.js","BooksAPI.js","components/App.js","index.js"],"names":["options","key","text","disabled","value","CurrentPage","handleChange","e","book","props","updateBooks","titleShow","books","length","className","title","this","map","index","src","imageLinks","thumbnail","alt","Icon","trigger","Dropdown","icon","onChange","defaultValue","dv","Component","myBooks","state","currentlyReading","wantToRead","read","prevProps","setState","filter","shelf","to","SearchBar","searchChange","target","handleSubmit","preventDefault","bookSearch","onSubmit","htmlFor","type","placeholder","term","id","Search","searchTerm","controlSearchChange","submitBookSearch","Button","animated","inverted","color","Content","hidden","name","visible","searching","class","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","body","JSON","stringify","search","query","App","searchResults","componentDidMount","BooksAPI","componentDidUpdate","bookUpdate","error","path","render","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.7710c6dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './CurrentPage.css';\nimport { Dropdown, Icon } from 'semantic-ui-react';\n\nconst options = [\n\t{\n\t\tkey: 'move',\n\t\ttext: (\n\t\t\t<span>\n\t\t\t\t<strong>Move</strong> to...\n\t\t\t</span>\n\t\t),\n\t\tdisabled: true\n\t},\n\t{ value: 'currentlyReading', text: 'Currently Reading' },\n\t{ value: 'wantToRead', text: 'Want to Read' },\n\t{ value: 'read', text: 'Read' },\n\t{ value: 'none', text: 'None' }\n];\n\nclass CurrentPage extends Component {\n\thandleChange = (e, { book, value }) => {\n\t\tif (value !== book) {\n\t\t\tthis.props.updateBooks(book, value);\n\t\t}\n\t};\n\ttitleShow = () => {\n\t\tif (this.props.books.length > 0) {\n\t\t\treturn <h3 className=\"ui block header\">{this.props.title}</h3>;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"shelfs ui\">\n\t\t\t\t{this.titleShow()}\n\t\t\t\t<div className=\"shelf ui\">\n\t\t\t\t\t{this.props.books.map((book, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"shelf-book ui\" key={index}>\n\t\t\t\t\t\t\t\t<div className=\"book-settings\">\n\t\t\t\t\t\t\t\t\t<img className=\"\" src={book.imageLinks.thumbnail} alt={book.title} />\n\t\t\t\t\t\t\t\t\t<Icon className=\"circle-book-menu big\" options={options} trigger={<div />}>\n\t\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\t\ticon=\"caret down\"\n\t\t\t\t\t\t\t\t\t\t\ttrigger={<div />}\n\t\t\t\t\t\t\t\t\t\t\tbook={book}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={options[this.props.dv].value}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"DropDownSemantic\"\n\t\t\t\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p>{book.title}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n// \t\t\t\t\t\t\t\t<Dropdown className=\"book-options\" trigger={trigger} options={options} />\n\nexport default CurrentPage;\n","import React, { Component } from 'react';\nimport CurrentPage from './CurrentPage';\nimport { Link } from 'react-router-dom';\n\nexport default class myBooks extends Component {\n\tstate = {\n\t\tcurrentlyReading: [],\n\t\twantToRead: [],\n\t\tread: []\n\t};\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.books !== prevProps.books) {\n\t\t\tthis.setState({ currentlyReading: this.props.books.filter((book) => book.shelf === 'currentlyReading') });\n\t\t\tthis.setState({ wantToRead: this.props.books.filter((book) => book.shelf === 'wantToRead') });\n\t\t\tthis.setState({ read: this.props.books.filter((book) => book.shelf === 'read') });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui inverted segment\">\n\t\t\t\t<div className=\"ui inverted secondary menu\">\n\t\t\t\t\t<Link to=\"/myreads\" className=\"active red item\">\n\t\t\t\t\t\t<i className=\"large book icon\" />\n\t\t\t\t\t\tMyBooks\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className=\"right menu\">\n\t\t\t\t\t\t<Link to=\"/search\" className=\"item\">\n\t\t\t\t\t\t\t<i className=\"large search icon\" />\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<CurrentPage\n\t\t\t\t\tdv={1}\n\t\t\t\t\tupdateBooks={this.props.updateBooks}\n\t\t\t\t\tbooks={this.state.currentlyReading}\n\t\t\t\t\ttitle=\"Currently Reading\"\n\t\t\t\t/>\n\t\t\t\t<CurrentPage\n\t\t\t\t\tdv={2}\n\t\t\t\t\tupdateBooks={this.props.updateBooks}\n\t\t\t\t\tbooks={this.state.wantToRead}\n\t\t\t\t\ttitle=\"Want To Read\"\n\t\t\t\t/>\n\t\t\t\t<CurrentPage dv={3} updateBooks={this.props.updateBooks} books={this.state.read} title=\"Read\" />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class SearchBar extends Component {\n\thandleChange = (e) => {\n\t\tthis.props.searchChange(e.target.value);\n\t};\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.bookSearch();\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui segment inverted \">\n\t\t\t\t<form className=\"ui form\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t<label htmlFor=\"searchTerm\">\n\t\t\t\t\t\t<b>Book Search</b>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div className=\"ui fluid icon input\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t//beacuse we want react to drive forward data and store data not HTML\n\t\t\t\t\t\t\tvalue={this.props.term}\n\t\t\t\t\t\t\tid=\"searchTerm\"\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t// does make things easier as only need to change this to control the input\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<i className=\"search icon\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport CurrentPage from './CurrentPage';\nimport { Button, Icon } from 'semantic-ui-react';\n\nexport default class Search extends Component {\n\tstate = { searchTerm: '', books: [] };\n\tcontrolSearchChange = (searchTerm) => {\n\t\tthis.setState({ searchTerm });\n\t};\n\tsubmitBookSearch = () => {\n\t\tthis.props.bookSearch(this.state.searchTerm);\n\t};\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.books !== prevProps.books) {\n\t\t\tthis.setState({ books: this.props.books });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui segment\">\n\t\t\t\t<div className=\"ui\">\n\t\t\t\t\t<Link to=\"/myreads\" className=\"active red white  item\">\n\t\t\t\t\t\t<Button animated inverted color=\"red\">\n\t\t\t\t\t\t\t<Button.Content hidden>\n\t\t\t\t\t\t\t\t<Icon name=\"arrow left\" />My Books\n\t\t\t\t\t\t\t</Button.Content>\n\t\t\t\t\t\t\t<Button.Content visible>\n\t\t\t\t\t\t\t\t<Icon name=\"arrow left\" />My Books\n\t\t\t\t\t\t\t</Button.Content>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ui inverted segment\">\n\t\t\t\t\t<SearchBar\n\t\t\t\t\t\tbookSearch={this.submitBookSearch}\n\t\t\t\t\t\tterm={this.state.searchTerm}\n\t\t\t\t\t\tsearchChange={this.controlSearchChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.props.searching === 'notfound' && (\n\t\t\t\t\t\t<div class=\"ui error message\">\n\t\t\t\t\t\t\t<div class=\"header\">No Books Found!</div>\n\t\t\t\t\t\t\t<p>Please try a different search term.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<CurrentPage dv={4} updateBooks={this.props.updateBooks} books={this.state.books} title=\"Results\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","const api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(37).substr(-8);\n\nconst headers = {\n\tAccept: 'application/json',\n\tAuthorization: token\n};\n\nexport const get = (bookId) =>\n\tfetch(`${api}/books/${bookId}`, { headers }).then((res) => res.json()).then((data) => data.book);\n\nexport const getAll = () => fetch(`${api}/books`, { headers }).then((res) => res.json()).then((data) => data.books);\n\nexport const update = (book, shelf) =>\n\tfetch(`${api}/books/${book.id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ shelf })\n\t}).then((res) => res.json());\n\nexport const search = (query) =>\n\tfetch(`${api}/search`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ query })\n\t})\n\t\t.then((res) => res.json())\n\t\t.then((data) => data.books);\n","import React, { Component } from 'react';\nimport MyBooks from './MyBooks';\nimport Search from './Search';\nimport { Route } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\n\nclass App extends Component {\n\tstate = {\n\t\tbooks: [],\n\t\tsearchResults: [],\n\t\tsearching: 'not'\n\t};\n\tcomponentDidMount = () => {\n\t\tBooksAPI.getAll().then((books) => {\n\t\t\tthis.setState({ books });\n\t\t});\n\t};\n\tcomponentDidUpdate = () => {\n\t\tBooksAPI.getAll().then((books) => {\n\t\t\tthis.setState({ books });\n\t\t});\n\t};\n\tbookUpdate = (book, shelf) => {\n\t\tBooksAPI.update(book, shelf);\n\t};\n\n\tbookSearch = (query) => {\n\t\tBooksAPI.search(query).then((books) => {\n\t\t\tif (!books.error) {\n\t\t\t\tthis.setState({ searchResults: books, searching: 'found' });\n\t\t\t} else {\n\t\t\t\tthis.setState({ searchResults: [], searching: 'notfound' });\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui container\">\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/myreads\"\n\t\t\t\t\trender={() => <MyBooks updateBooks={this.bookUpdate} books={this.state.books} />}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/search\"\n\t\t\t\t\trender={() => (\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tsearching={this.state.searching}\n\t\t\t\t\t\t\tupdateBooks={this.bookUpdate}\n\t\t\t\t\t\t\tbookSearch={this.bookSearch}\n\t\t\t\t\t\t\tbooks={this.state.searchResults}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n/*\n\tROUTE EXPLANATION\n\tEssentially all this really means:\n\t\t<Route path=\"...\" render=(...)/>\n\tis render this component when on this link (path=\"...\")\n\tadding exact to that meaning that the link has to ONLY include that\n\tso for instance root would be '/', and another link '/search', techincally\n\t'/search' contains or matches '/' so it would render that too unless we specify 'exact'\n*/\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\n// creating a history object that listens and keeps track of URL changes\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.querySelector('#root')\n);\n"],"sourceRoot":""}